get_clusters(dia_results)
get_clusters(dia_results,5)
cluster_map(dia_df,a,a2,5)
cluster_map(dia_results,a,a2,5)
get_clusters(dia_results,5) %>% merge(.,a,by.x="area",
by.y="name")
get_clusters(dia_results,5) %>% merge(.,a,by.x="area",
by.y="name") %>% View()
cluster_map <- function(dist_mat, kml_points, kml_polygon, cluster_num){
cluster_groups <- get_clusters(dist_mat, cluster_num)
full_df <- merge(cluster_groups,
kml_points,
by.x="area",
by.y="name")
unique_indices <- !deldir::duplicatedxy(kml_points)
full_df <- full_df[unique_indices,]
ggplot(data = full_df,
aes(x = longitude,
y = latitude)) +
ggvoronoi::geom_voronoi(
mapping = aes(fill = as.factor(grouping)),
alpha = 0.8,
outline = kml_polygon,
color = "grey") +
theme(legend.position = "none")
}
cluster_map(dia_results,a,a2,5)
deldir::duplicatedxy(a)
a
cluster_map <- function(dist_mat, kml_points, kml_polygon, cluster_num){
cluster_groups <- get_clusters(dist_mat, cluster_num)
full_df <- merge(cluster_groups,
kml_points,
by.x="area",
by.y="name")
kml_points <- kml_points %>%
dplyr::select(longitude, latitude)
colnames(kml_points) <- c("x", "y")
colnames(kml_polygon) <- c("longitude", "latitude", "group")
unique_indices <- !deldir::duplicatedxy(kml_points)
full_df <- full_df[unique_indices,]
ggplot(data = full_df,
aes(x = longitude,
y = latitude)) +
ggvoronoi::geom_voronoi(
mapping = aes(fill = as.factor(grouping)),
alpha = 0.8,
outline = kml_polygon,
color = "grey") +
theme(legend.position = "none")
}
cluster_map(dia_results,a,a2,5)
cluster_map <- function(dist_mat, kml_points, kml_polygon, cluster_num){
cluster_groups <- get_clusters(dist_mat, cluster_num)
full_df <- merge(cluster_groups,
kml_points,
by.x="area",
by.y="name")
kml_points <- kml_points %>%
dplyr::select(longitude, latitude)
colnames(kml_points) <- c("x", "y")
colnames(kml_polygon) <- c("longitude", "latitude", "group")
unique_indices <- !deldir::duplicatedxy(kml_points)
full_df <- full_df[unique_indices,]
ggplot(data = full_df,
aes(x = longitude,
y = latitude)) +
ggvoronoi::geom_voronoi(
mapping = aes(fill = as.factor(grouping)),
alpha = 0.8,
outline = kml_polygon,
color = "grey") +
theme(legend.position = "none")
}
cluster_map(dia_results,a,a2,5)
deldir::duplicatedxy(a)
colnames(a) <- c("x", "y")
deldir::duplicatedxy(a)
!deldir::duplicatedxy(a)
deldir::duplicatedxy(a)
sum(deldir::duplicatedxy(a))
a
a <- tidykml::kml_points("~/Downloads/Dutch613.kml") %>%
dplyr::select(name, longitude, latitude)
a2 <- tidykml::kml_polygons("~/Downloads/Dutch613.kml") %>%
dplyr::select(longitude, latitude, name) %>%
as.data.frame()
a <- a %>% select(longitude, latitude)
a <- a %>% dplyr::select(longitude, latitude)
a
colnames(a) <- c("x", "y")
a
deldir::duplicatedxy(a)
sum(deldir::duplicatedxy(a))
which(deldir::duplicatedxy(a))
cluster_map(dia_results,a,a2,5)
get_clusters(dia_results,5) %>% merge(.,a,by.x="area",
by.y="name") %>% View()
a
deldir::duplicatedxy(kml_points)
deldir::duplicatedxy(a)
@deldir::duplicatedxy(a)
!deldir::duplicatedxy(a)
which(!deldir::duplicatedxy(a))
which(deldir::duplicatedxy(a))
cluster_map <- function(dist_mat, kml_points, kml_polygon, cluster_num){
cluster_groups <- get_clusters(dist_mat, cluster_num)
full_df <- merge(cluster_groups,
kml_points,
by.x="area",
by.y="name")
kml_points <- kml_points %>%
dplyr::select(longitude, latitude)
colnames(kml_points) <- c("x", "y")
colnames(kml_polygon) <- c("longitude", "latitude", "group")
unique_indices <- !deldir::duplicatedxy(kml_points)
full_df <- full_df[unique_indices,]
ggplot(data = full_df,
aes(x = longitude,
y = latitude)) +
ggvoronoi::geom_voronoi(
mapping = aes(fill = as.factor(grouping)),
alpha = 0.8,
outline = kml_polygon,
color = "grey") +
theme(legend.position = "none")
}
cluster_map(dia_results,a,a2,5)
a <- tidykml::kml_points("~/Downloads/Dutch613.kml") %>%
dplyr::select(name, longitude, latitude)
a2 <- tidykml::kml_polygons("~/Downloads/Dutch613.kml") %>%
dplyr::select(longitude, latitude, name) %>%
as.data.frame()
cluster_map(dia_results,a,a2,5)
mds_map <- function(dist_mat, kml_points, kml_polygon){
#dist_mds <- vegan::metaMDS(dist_mat,k = 3,maxit = 999,trymax = 500)
#x <- dist_mds$points[,1]
#y <- dist_mds$points[,2]
#z <- dist_mds$points[,3]
dist_mds <- cmdscale(dist_mat, k = 3)
x <- dist_mds[,1]
y <- dist_mds[,2]
z <- dist_mds[,3]
x_scaled <- sapply(seq_along(x), function(i){
x_diff <- max(x) - min(x)
((x[i] - min(x)) / x_diff)
})
y_scaled <- sapply(seq_along(y), function(i){
y_diff <- max(y) - min(y)
((y[i] - min(y)) / y_diff)
})
z_scaled <- sapply(seq_along(z), function(i){
z_diff <- max(z) - min(z)
((z[i] - min(z)) / z_diff)
})
xyz_color <- sapply(seq_along(x_scaled), function(i){
rgb(x_scaled[i], y_scaled[i], z_scaled[i])
})
mds_color_df <- cbind(kml_points, xyz_color)
kml_points <- kml_points %>% dplyr::select(longitude, latitude)
colnames(kml_points) <- c("x", "y")
colnames(kml_polygon) <- c("longitude", "latitude", "group")
unique_indices <- !deldir::duplicatedxy(kml_points)
mds_color_df <- mds_color_df[unique_indices,]
ggplot(data = mds_color_df,
aes(x = longitude,
y = latitude)) +
ggvoronoi::geom_voronoi(
mapping = aes(fill = xyz_color),
alpha = 0.85,
outline = kml_polygon,
#color = "white",
size = 0.2
) +
scale_fill_identity()
}
mds_map(dia_results,a,a2)
get_clusters(dia_results,5) %>% merge(.,a,by.x="area",
by.y="name") %>% View()
full_df2 <- get_clusters(dia_results,5) %>% merge(.,a,by.x="area",
by.y="name")
colnames(a) <- c("x","y")
a
colnames(a) <- c("name", "x","y")
a
a <- a %>%
dplyr::select(longitude, latitude)
a <- a %>%
dplyr::select(x, y)
a
unique_indices <- !deldir::duplicatedxy(a)
unique_indices
full_df2[unique_indices,]
colnames(a2) <- c("longitude", "latitude", "group")
ggplot(data = full_df,
aes(x = longitude,
y = latitude)) +
ggvoronoi::geom_voronoi(
mapping = aes(fill = as.factor(grouping)),
alpha = 0.8,
outline = a2,
color = "grey") +
theme(legend.position = "none")
ggplot(data = full_df2,
aes(x = longitude,
y = latitude)) +
ggvoronoi::geom_voronoi(
mapping = aes(fill = as.factor(grouping)),
alpha = 0.8,
outline = a2,
color = "grey") +
theme(legend.position = "none")
deldir::duplicatedxy(full_df2)
deldir::duplicatedxy(full_df2$longitude)
colnames(full_df2)
colnames(full_df2) <- c("area", "grouping", "x", "y")
deldir::duplicatedxy(full_df2[,3:4])
!deldir::duplicatedxy(full_df2[,3:4])
which(deldir::duplicatedxy(full_df2[,3:4]))
which(deldir::duplicatedxy(a2))
which(deldir::duplicatedxy(a))
a
colnames(a) <- c("y", "x")
which(deldir::duplicatedxy(a))
colnames(a) <- c("x", "y")
which(deldir::duplicatedxy(a))
which(deldir::duplicatedxy(a[-99,]))
which(deldir::duplicatedxy(a[-3,]))
cluster_map <- function(dist_mat, kml_points, kml_polygon, cluster_num){
cluster_groups <- get_clusters(dist_mat, cluster_num)
full_df <- merge(cluster_groups,
kml_points,
by.x="area",
by.y="name")
kml_points <- kml_points %>%
dplyr::select(longitude, latitude)
colnames(full_df) <- c("area", "grouping", "x", "y")
colnames(kml_polygon) <- c("longitude", "latitude", "group")
unique_indices <- !deldir::duplicatedxy(full_df[,3:4])
full_df <- full_df[unique_indices,]
colnames(full_df) <- c("area", "grouping", "longitude", "latitude")
ggplot(data = full_df,
aes(x = longitude,
y = latitude)) +
ggvoronoi::geom_voronoi(
mapping = aes(fill = as.factor(grouping)),
alpha = 0.8,
outline = kml_polygon,
color = "grey") +
theme(legend.position = "none")
}
a <- tidykml::kml_points("~/Downloads/Dutch613.kml") %>%
dplyr::select(name, longitude, latitude)
a2 <- tidykml::kml_polygons("~/Downloads/Dutch613.kml") %>%
dplyr::select(longitude, latitude, name) %>%
as.data.frame()
dia_data <- as.matrix(readxl::read_xlsx("~/Downloads/Dutch613.xlsx"))
row.names(dia_data) <- dia_data[,1]
dia_data <- dia_data[,-1]
cluster_map(dia_results,a,a2)
cluster_map(dia_results,a,a2,5)
cluster_map(dia_results,a,a2,7)
cluster_map(dia_results,a,a2,6)
cluster_map <- function(dist_mat, kml_points, kml_polygon, cluster_num){
cluster_groups <- get_clusters(dist_mat, cluster_num)
full_df <- merge(cluster_groups,
kml_points,
by.x="area",
by.y="name")
kml_points <- kml_points %>%
dplyr::select(longitude, latitude)
colnames(full_df) <- c("area", "grouping", "x", "y")
colnames(kml_polygon) <- c("longitude", "latitude", "group")
unique_indices <- !deldir::duplicatedxy(full_df[,3:4])
full_df <- full_df[unique_indices,]
ggplot(data = full_df,
aes(x = x,
y = y)) +
ggvoronoi::geom_voronoi(
mapping = aes(fill = as.factor(grouping)),
alpha = 0.8,
outline = kml_polygon,
color = "grey") +
theme(legend.position = "none")
}
cluster_map(dia_results,a,a2,6)
cluster_map <- function(dist_mat, kml_points, kml_polygon, cluster_num){
cluster_groups <- get_clusters(dist_mat, cluster_num)
full_df <- merge(cluster_groups,
kml_points,
by.x="area",
by.y="name")
kml_points <- kml_points %>%
dplyr::select(longitude, latitude)
colnames(full_df) <- c("area", "grouping", "x", "y")
colnames(kml_polygon) <- c("longitude", "latitude", "group")
unique_indices <- !deldir::duplicatedxy(full_df[,3:4])
full_df <- full_df[unique_indices,]
ggplot(data = full_df,
aes(x = x,
y = y)) +
ggvoronoi::geom_voronoi(
mapping = aes(fill = as.factor(grouping)),
alpha = 0.8,
outline = kml_polygon,
color = "grey") +
theme(legend.position = "none") +
xlab("longitude") +
ylab("latitude")
}
cluster_map(dia_results,a,a2,6)
mds_map(dia_results,a,a2)
cluster_map(dia_results,a,a2,6)
get_clusters <- function(dist_mat, cluster_num, method){
dist_mat[upper.tri(dist_mat)] <- NA
dist_mat <- as.dist(dist_mat)
clustered_dist <- hclust(dist_mat, method = method)
cluster_groups <- cutree(clustered_dist,
k = cluster_num) %>%
as.data.frame() %>%
tibble::rownames_to_column()
colnames(cluster_groups) <- c("area", "grouping")
cluster_groups
}
cluster_map <- function(dist_mat, kml_points, kml_polygon, cluster_num, method){
cluster_groups <- get_clusters(dist_mat, cluster_num, method)
full_df <- merge(cluster_groups,
kml_points,
by.x="area",
by.y="name")
kml_points <- kml_points %>%
dplyr::select(longitude, latitude)
colnames(full_df) <- c("area", "grouping", "x", "y")
colnames(kml_polygon) <- c("longitude", "latitude", "group")
unique_indices <- !deldir::duplicatedxy(full_df[,3:4])
full_df <- full_df[unique_indices,]
ggplot(data = full_df,
aes(x = x,
y = y)) +
ggvoronoi::geom_voronoi(
mapping = aes(fill = as.factor(grouping)),
alpha = 0.8,
outline = kml_polygon,
color = "grey") +
theme(legend.position = "none") +
xlab("longitude") +
ylab("latitude")
}
cluster_map(dia_results,a,a2,6, "ward.D")
cluster_map(dia_results,a,a2,6, "ward.D") + theme_bw()
cluster_map <- function(dist_mat, kml_points, kml_polygon, cluster_num, method){
cluster_groups <- get_clusters(dist_mat, cluster_num, method)
full_df <- merge(cluster_groups,
kml_points,
by.x="area",
by.y="name")
kml_points <- kml_points %>%
dplyr::select(longitude, latitude)
colnames(full_df) <- c("area", "grouping", "x", "y")
colnames(kml_polygon) <- c("longitude", "latitude", "group")
unique_indices <- !deldir::duplicatedxy(full_df[,3:4])
full_df <- full_df[unique_indices,]
ggplot(data = full_df,
aes(x = x,
y = y)) +
ggvoronoi::geom_voronoi(
mapping = aes(fill = as.factor(grouping)),
alpha = 0.8,
outline = kml_polygon,
color = "grey") +
#theme(legend.position = "none") +
xlab("longitude") +
ylab("latitude")
}
cluster_map(dia_results,a,a2,6, "ward.D") + theme_bw()
cluster_map(dia_results,a,a2,6, "ward.D") + theme_bw(legend.position = "none")
cluster_map(dia_results,a,a2,6, "ward.D") + theme(legend.position = "none")
cluster_map <- function(dist_mat, kml_points, kml_polygon, cluster_num, method){
cluster_groups <- get_clusters(dist_mat, cluster_num, method)
full_df <- merge(cluster_groups,
kml_points,
by.x="area",
by.y="name")
kml_points <- kml_points %>%
dplyr::select(longitude, latitude)
colnames(full_df) <- c("area", "grouping", "x", "y")
colnames(kml_polygon) <- c("longitude", "latitude", "group")
unique_indices <- !deldir::duplicatedxy(full_df[,3:4])
full_df <- full_df[unique_indices,]
ggplot(data = full_df,
aes(x = x,
y = y)) +
ggvoronoi::geom_voronoi(
mapping = aes(fill = as.factor(grouping)),
alpha = 0.8,
outline = kml_polygon,
color = "grey") +
theme(legend.position = "none") +
xlab("longitude") +
ylab("latitude")
}
cluster_map(dia_results,a,a2,6, "ward.D")
dia_data2
install.packages("RcppProgress")
Rcpp::sourceCpp('Documents/dialectR/R/distance_matrix.cpp')
Rcpp::sourceCpp('Documents/dialectR/R/distance_matrix.cpp')
Rcpp::sourceCpp('Documents/dialectR/R/distance_matrix.cpp')
distance_matrix(dia_data2, "vc_leven", T)
dia_results2 <- distance_matrix(dia_data, "vc_leven", T)
seq(1,10)
sum(seq(1,10))
10*9
for(i in 1:3){for(j in 1:3){print(i)}}
for(i in 1:3){for(j in 1:3){print(i)print(j)}}
for(i in 1:3){
for(j in 1:3){
print(i)
print(j)
}}
for(i in 1:3){
for(j in 1:3){
sprintf("i is %i, j is %j",i,j)
}}
for(i in 1:3){
for(j in 1:3){
sprintf("i is %i, j is %i",i,j)
}}
for(i in 1:3){
for(j in 1:3){
print(sprintf("i is %i, j is %i",i,j))
}}
for(i in 1:3){
for(j in (i+1):3){
print(sprintf("i is %i, j is %i",i,j))
}}
dia_data2 <- dia_data[1:100,1:100]
rm(dia_results2)
distance_matrix(dia_data2, "vc_leven", T)
dia_data2 <- dia_data[1:300,1:300]
distance_matrix(dia_data2, "vc_leven", T)
dia_data2 <- dia_data[1:400,1:400]
sum(seq(1:5))
sum(seq(1:5))-5
sum(seq(1:4))-4
sum(seq(1:3))
sum(seq(1:4))
Rcpp::sourceCpp('Documents/dialectR/R/distance_matrix.cpp')
dia_data <- as.matrix(readxl::read_xlsx("~/Downloads/Dutch613.xlsx"))
row.names(dia_data) <- dia_data[,1]
dia_data <- dia_data[,-1]
Rcpp::sourceCpp('Documents/dialectR/R/distance_matrix.cpp')
Rcpp::sourceCpp('Documents/dialectR/src/split.cpp')
Rcpp::sourceCpp('Documents/dialectR/src/split.cpp')
Rcpp::sourceCpp('Documents/dialectR/src/vc_leven.cpp')
Rcpp::sourceCpp('Documents/dialectR/src/split.cpp')
Rcpp::sourceCpp('Documents/dialectR/src/split.cpp')
Rcpp::sourceCpp('Documents/dialectR/src/split.cpp')
Rcpp::sourceCpp('Documents/dialectR/src/utftester.cpp')
Rcpp::sourceCpp('Documents/dialectR/src/utftester.cpp')
Rcpp::sourceCpp('Documents/dialectR/src/utftester.cpp')
library(Rcpp)
setwd("~/Documents/dialectR/src")
setwd(./)
setwd(~/.)
setwd("./")
setwd("~/Documents/dialectR/src")
library(dialectR)
dialectR::vc_leven("hit", "hitt")
dialectR::vc_leven("hit", "hitʔ")
dialectR::vc_leven("hit", "hiʔ")
dialectR::vc_leven("", "ʔ")
dialectR::vc_leven("h", "ʔ")
dialectR::vc_leven("a", "ʔ")
dialectR::vc_leven("i", "ʔ")
dialectR::vc_leven("hi", "hiʔ")
dialectR::vc_leven("hit", "hiʔ")
dialectR::vc_leven("hit", "hia")
setwd("~/Documents/dialectR/src")
library(devtools)
use_git()
system("R CMD build ~/Documents/dialectR")
system("R CMD INSTALL ~/Documents/dialectR")
detach("package:dialectR")
library(dialectR)
dialectR::vc_leven("hit", "hot")
dialectR::vc_leven("hit")
dialectR::vc_leven("t", "ʔ")
dialectR::vc_leven("a", "ʔ")
Rcpp::sourceCpp('distance_matrix.cpp')
dia_results <- distance_matrix(dia_data[1:10,1:10], "vc_leven", T)
dia_results
dia_results %>% View()
View(dia_results)
dia_results <- distance_matrix(dia_data[1:10,1:10], "leven", T)
View(dia_results)
library(roxygen2)
a2 <- tidykml::kml_polygons("~/Downloads/Dutch613.kml") %>%
dplyr::select(longitude, latitude, name)
library(magrittr)
a2 <- tidykml::kml_polygons("~/Downloads/Dutch613.kml") %>%
dplyr::select(longitude, latitude, name)
View(a2)
a2 <- tidykml::kml_polygons("~/Downloads/Dutch613.kml") %>%
dplyr::select(longitude, latitude, name) %>%
as.data.frame()
View(a2)
a <- tidykml::kml_points("~/Downloads/Dutch613.kml") %>%
dplyr::select(name, longitude, latitude)
View(a)
system("R CMD build ~/Documents/dialectR")
system("R CMD INSTALL ~/Documents/dialectR")
library(dialectR)
